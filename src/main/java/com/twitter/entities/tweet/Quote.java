package com.twitter.entities.tweet;

import com.twitter.entities.tweet.content.ImageContent;
import com.twitter.entities.tweet.content.TextContent;
import com.twitter.entities.user.MiniUser;
import jakarta.persistence.*;

import java.io.Serializable;
import java.time.LocalDateTime;

@Entity
@Table(name = "quotes")
public class Quote implements Serializable
{
    // this is automatically generated by the database
    @Id@GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private final String userName;
    @OneToOne
    private final Tweet tweet;
    @OneToOne
    private final MiniUser quotedBy;
    private final LocalDateTime date;
    @Embedded
    @AttributeOverride(name = "text", column = @Column(name = "qoute_text"))
    private final TextContent textContent;
    @Embedded
    @AttributeOverride(name = "text", column = @Column(name = "qoute_image"))
    private final ImageContent imageContent;

    public Quote(Tweet tweet, MiniUser quotedBy, TextContent textContent, ImageContent imageContent)
    {
        this.id = -1L;
        this.tweet = tweet;
        this.quotedBy = quotedBy;
        this.date = LocalDateTime.now();
        this.textContent = textContent;
        this.imageContent = imageContent;
        userName = quotedBy.getUserName();
    }

    public Quote(Tweet tweet, MiniUser quotedBy, TextContent textContent, ImageContent imageContent, LocalDateTime date)
    {
        this.id = -1L;
        this.tweet = tweet;
        this.quotedBy = quotedBy;
        this.date = date;
        this.textContent = textContent;
        this.imageContent = imageContent;
        userName = quotedBy.getUserName();
    }

    public Quote() {

        tweet = null;
        quotedBy = null;
        date = null;
        textContent = null;
        imageContent = null;
        userName = null;
    }

    public long getId()
    {
        return id;
    }

    public void setId(long id)
    {
        this.id = id;
    }

    public Tweet getTweet()
    {
        return tweet;
    }

    public MiniUser getQuotedBy()
    {
        return quotedBy;
    }

    public LocalDateTime getDate()
    {
        return date;
    }

    public TextContent getTextContent()
    {
        return textContent;
    }

    public ImageContent getImageContent()
    {
        return imageContent;
    }
}
